name: CI Ubuntu 20.04

env:
  DISTR_REPO: "ubuntu/focal"
  CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "**"

jobs:
  test:
    name: LLVM ${{ matrix.LLVM_VERSION }}
    runs-on: ubuntu-latest
    container: ubuntu:20.04
    strategy:
      matrix:
        LLVM_VERSION: ["9.0", "10.0", "11.0", "12.0"]

    steps:
      - name: Install software
        run: |
          apt-get update && apt-get install -y software-properties-common
          add-apt-repository ppa:git-core/ppa
          apt-get update && apt-get install -y python3-pip curl git
          pip3 install ansible
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: For debugging
        run: |
          env | sort
      - name: For debugging
        run: |
          cat $GITHUB_EVENT_PATH
      - name: Set build settings
        id: settings
        run: |
          echo ::set-output name=version::`grep -Eo "MULL_VERSION [0-9.]+" CMakeLists.txt | awk ' { print $2 } '`

          case $GITHUB_EVENT_NAME in
            "pull_request")
              echo ::set-output name=suffix::-pr`grep -Eo "\"number\": [0-9]+" $GITHUB_EVENT_PATH | awk ' { print $2; exit } '`
              echo ::set-output name=channel::nightly
            ;;
            "push")
              case $GITHUB_REF in
                "refs/heads/"*)
                  echo ::set-output name=suffix::-trunk`git rev-list HEAD --count`
                  echo ::set-output name=channel::nightly
                ;;
                "refs/tags/"*)
                  echo ::set-output name=suffix::""
                  echo ::set-output name=channel::stable
                  if [ `echo $GITHUB_REF | awk -F/ ' { print $3 } '` != `grep -Eo "MULL_VERSION [0-9.]+" CMakeLists.txt | awk ' { print $2 } '` ];
                  then
                    false
                  fi
                ;;
                *)
                  false
                ;;
              esac
            ;;
            *)
              false
            ;;
          esac
      - name: Run CI task
        run: |
          cd infrastructure && \
          ansible-playbook ubuntu-playbook.yaml \
            -e llvm_version="${{ matrix.LLVM_VERSION }}.0" \
            -e source_dir=$PWD/.. \
            -e gitref=$GITHUB_SHA \
            -e host=localhost \
            -e mull_version=${{ steps.settings.outputs.version }}${{ steps.settings.outputs.suffix }} \
            --verbose
      - name: Publish package
        if: env.CLOUDSMITH_API_KEY != null
        run: |
          cloudsmith push deb mull-project/mull-${{ steps.settings.outputs.channel }}/${{ env.DISTR_REPO }} infrastructure/packages/`cat infrastructure/PACKAGE_FILE_NAME`.deb
      - name: Move package
        run: |
          mkdir -p /tmp/packages
          mv infrastructure/packages/`cat infrastructure/PACKAGE_FILE_NAME`.deb /tmp/packages/`cat infrastructure/PACKAGE_FILE_NAME`.deb
      - name: Attach package to the tag
        if: contains(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: /tmp/packages/*.deb
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
        # This step fails sometimes (with ECONNRESET), but I'm not willing to
        # debug it as the main source of packages is Cloudsmith
        continue-on-error: true

