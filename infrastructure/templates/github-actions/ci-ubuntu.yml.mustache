{{=[[ ]]=}}name: [[ OS_NAME ]] [[OS_VERSION]] CI
env:
  CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
on:
  push:
    branches: ["main"]
    tags: ["**"]
  pull_request:
    branches: ["main"]
jobs:
  build-and-test:
    runs-on: [[ OS_RUNNER ]]
    strategy:
      matrix:
        LLVM_VERSION: [[LLVM_VERSIONS]]
    name: [[ OS_NAME ]] [[OS_VERSION]] - LLVM ${{ matrix.LLVM_VERSION }}
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-bazel-cache
        with:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build, test, package
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/mull-project/internal-[[ OS_NAME_LOWER ]]_[[OS_VERSION]]-llvm-${{ matrix.LLVM_VERSION }}-ci
          configFile: ./.devcontainer/ubuntu_[[OS_VERSION]]-llvm-${{ matrix.LLVM_VERSION }}/devcontainer.json
          runCmd: |
            mkdir -p packages
            bazel build //...
            bazel test //...
            mv -v bazel-bin/Mull-*.deb packages/
      - name: Publish package
        uses: devcontainers/ci@v0.3
        if: env.CLOUDSMITH_API_KEY != null
        with:
          imageName: ghcr.io/mull-project/internal-[[ OS_NAME_LOWER ]]_[[OS_VERSION]]-llvm-${{ matrix.LLVM_VERSION }}-ci
          configFile: ./.devcontainer/ubuntu_[[OS_VERSION]]-llvm-${{ matrix.LLVM_VERSION }}/devcontainer.json
          push: never
          env: CLOUDSMITH_API_KEY
          runCmd: |
            bazel run publish
      - name: Move package
        run: |
          mkdir -p /tmp/packages
          sudo mv -v packages/Mull-*.deb /tmp/packages/
      - uses: ./.github/actions/attach-package
        with:
          GH_API_KEY: ${{ secrets.GITHUB_TOKEN }}
