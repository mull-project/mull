---
- name: Prepare integration tests
  file:
    path: "{{ working_dir }}/integration"
    state: directory

- name: Clone fmt
  git:
    repo: https://github.com/fmtlib/fmt.git
    dest: "{{ working_dir }}/integration/fmt"
    version: 9e554999ce02cf86fcdfe74fe740c4fe3f5a56d5

- name: Create build directory for fmt
  file:
    path: "{{ working_dir }}/integration/fmt.build.dir"
    state: directory

- name: Prepare build system for fmt
  command:
  args:
    argv:
      - cmake
      - -G
      - Ninja
      - -DCMAKE_CXX_FLAGS=-fembed-bitcode --sysroot={{ SDKROOT }} -nostdinc++ -isystem {{ llvm_dir }}/include/c++/v1 -isystem {{ llvm_dir }}/lib/clang/{{ llvm_version }}/include
      - -DCMAKE_EXE_LINKER_FLAGS=-lc++ -L {{ llvm_dir }}/lib
      - -DCMAKE_BUILD_TYPE=Debug
      - -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - "{{ working_dir }}/integration/fmt"
    chdir: "{{ working_dir }}/integration/fmt.build.dir"
    creates: "{{ working_dir }}/integration/fmt.build.dir/CMakeCache.txt"
  environment:
    CC: "{{ llvm_dir }}/bin/clang"
    CXX: "{{ llvm_dir }}/bin/clang++"

- name: Build fmt
  command: ninja core-test
  args:
    chdir: "{{ working_dir }}/integration/fmt.build.dir"

- name: Run fmt
  command: ./bin/core-test
  args:
    chdir: "{{ working_dir }}/integration/fmt.build.dir"
  environment:
    LD_LIBRARY_PATH: "{{ llvm_dir }}/lib"

- name: Run Mull against fmt
  command:
  args:
    argv:
      - mull-cxx-{{ llvm_major }}
      - -mutators=cxx_add_to_sub
      - -compilation-flags=--sysroot={{ SDKROOT }} -isystem {{ llvm_dir }}/include/c++/v1 -isystem {{ llvm_dir }}/lib/clang/{{ llvm_version }}/include
      - -compdb-path={{ working_dir }}/integration/fmt.build.dir/compile_commands.json
      - -linker={{ llvm_dir }}/bin/clang++
      - -linker-flags=-lc++ -lpthread
      - "{{ working_dir }}/integration/fmt.build.dir/bin/core-test"
  environment:
    LD_LIBRARY_PATH: "{{ llvm_dir }}/lib"

- name: Clone OpenSSL (no-shared)
  git:
    repo: https://github.com/openssl/openssl.git
    dest: "{{ working_dir }}/integration/openssl-no-shared"
    version: d4e4bd2a8163f355fa8a3884077eaec7adc75ff7

- name: Create build directory for OpenSSL (no-shared)
  file:
    path: "{{ working_dir }}/integration/openssl-no-shared.build.dir"
    state: directory

- name: Prepare build system for OpenSSL (no-shared)
  command: ./config -no-asm -no-shared -g -O0 -fembed-bitcode --sysroot={{ SDKROOT }}
  args:
    chdir: "{{ working_dir }}/integration/openssl-no-shared"
    creates: "{{ working_dir }}/integration/openssl-no-shared/Makefile"
  environment:
    CC: "{{ llvm_dir }}/bin/clang"

- name: Build OpenSSL (no-shared)
  command: make all
  args:
    chdir: "{{ working_dir }}/integration/openssl-no-shared"

- name: Run Mull against OpenSSL (no-shared)
  command:
  args:
    argv:
      - mull-cxx-{{ llvm_major }}
      - -mutators=cxx_add_to_sub
      - -compilation-flags=--sysroot={{ SDKROOT }} -isystem {{ llvm_dir }}/lib/clang/{{ llvm_version }}/include -I{{ working_dir }}/integration/openssl-no-shared/include -I{{ working_dir }}/integration/openssl-no-shared/crypto/include -I{{ working_dir }}/integration/openssl-no-shared
      - -linker={{ llvm_dir }}/bin/clang
      - -linker-flags=-lc++ -ldl -lpthread
      - "{{ working_dir }}/integration/openssl-no-shared/test/bio_enc_test"
  environment:
    LD_LIBRARY_PATH: "{{ llvm_dir }}/lib"
