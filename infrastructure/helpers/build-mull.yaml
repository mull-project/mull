---
- name: Clone Mull's sources
  git:
    repo: "{{ repo_url }}"
    dest: "{{ source_dir }}"
    version: "{{ gitref }}"
  when: checkout

- name: Create Build Directory (Debug)
  file:
    path: "{{ debug_build_dir }}"
    state: directory

- name: Prepare Build System (Debug)
  command:
  args:
    argv:
      - cmake
      - -G
      - Ninja
      - -DCMAKE_BUILD_TYPE=Debug
      - -DCMAKE_C_COMPILER={{ cmake_c_compiler }}
      - -DCMAKE_CXX_COMPILER={{ cmake_cxx_compiler }}
      - -DCMAKE_CXX_FLAGS="{{ mull_cxx_flags }}"
      - -DCMAKE_PREFIX_PATH={{ cmake_search_paths }}
      - "{{ source_dir }}"
    chdir: "{{ debug_build_dir }}"
    creates: "{{ debug_build_dir }}/CMakeCache.txt"

- name: Build Mull (Debug)
  command: ninja {{ item }}
  args:
    chdir: "{{ debug_build_dir }}"
  with_items:
    - json11
    - spdlog
    - mull-cxx-mutators
    - MullVersion
    - mull

- name: Build Tests (Debug)
  command: ninja mull-tests
  args:
    chdir: "{{ debug_build_dir }}"

- name: Run Tests (Debug)
  command: "{{ debug_build_dir}}/tests/mull-tests"

- name: Create Build Directory (Release)
  file:
    path: "{{ release_build_dir }}"
    state: directory

- name: Prepare Build System (Release)
  command:
  args:
    argv:
      - cmake
      - -G
      - Ninja
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_COMPILER={{ cmake_c_compiler }}
      - -DCMAKE_CXX_COMPILER={{ cmake_cxx_compiler }}
      - -DCMAKE_CXX_FLAGS="{{ mull_cxx_flags }}"
      - -DMULL_VERSION={{ mull_version }}
      - -DCMAKE_PREFIX_PATH={{ cmake_search_paths }}
      - "{{ source_dir }}"
    chdir: "{{ release_build_dir }}"
    creates: "{{ release_build_dir }}/CMakeCache.txt"

- name: Build Mull (Release)
  command: ninja {{ item }}
  args:
    chdir: "{{ release_build_dir }}"
  with_items:
    - json11
    - spdlog
    - mull-cxx-mutators
    - MullVersion
    - mull

- name: Build Tests (Release)
  command: ninja mull-tests
  args:
    chdir: "{{ release_build_dir }}"

- name: Run Tests (Release)
  command: "{{ release_build_dir}}/tests/mull-tests"

- name: Install Mull (Release)
  command: ninja install
  args:
    chdir: "{{ release_build_dir }}"
  become: true

- name: Prepare Package (Release)
  command: ninja package
  args:
    chdir: "{{ release_build_dir }}"
  become: true

- name: Copy package file name
  fetch:
    src: "{{ release_build_dir }}/PACKAGE_FILE_NAME"
    dest: PACKAGE_FILE_NAME
    flat: true

- name: Copy package to the local machine
  fetch:
    src: "{{ release_build_dir }}/{{ lookup('file', 'PACKAGE_FILE_NAME') }}.{{ item }}"
    dest: "packages/{{ lookup('file', 'PACKAGE_FILE_NAME') }}.{{ item }}"
    flat: true
  with_items: "{{ package_extensions }}"

- name: Print Mull version
  command: mull-runner-{{ llvm_major }} -version
  args:
    chdir: "{{ release_build_dir }}"
