"Mull's build system"

module(
    name = "mull",
    version = "0.25.0",
)

bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_pkg", version = "1.1.0")

bazel_dep(name = "toolchains_llvm", version = "1.3.0")
git_override(
    module_name = "toolchains_llvm",
    commit = "14eb90172b3c5f35bdb2699d006fe0f70e76aa24",
    remote = "https://github.com/bazel-contrib/toolchains_llvm",
)

# Configure and register the toolchain.
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_version = "20.1.0",
    stdlib = {
        "darwin-x86_64": "libc++",
        "darwin-aarch64": "libc++",
        "linux-x86_64": "stdc++",
        "linux-aarch64": "stdc++",
    },
)

use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

bazel_dep(name = "rules_cc", version = "0.1.1")

bazel_dep(name = "spdlog", version = "1.15.1")
bazel_dep(name = "reproc", version = "14.2.5")
bazel_dep(name = "sqlite3", version = "3.49.1")
bazel_dep(name = "googletest", version = "1.16.0")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "json11",
    integrity = "sha256-bJGfxwlz+J5gZzjkrGT5Grph/r/LIwQA4wv9x9PBszI=",
    urls = ["https://github.com/dropbox/json11/archive/402bcde713fbef0c67276fb09b07ffbe8ee13956.zip"],
    strip_prefix = "json11-402bcde713fbef0c67276fb09b07ffbe8ee13956",
    build_file = ":third_party/json11/json11.BUILD",
)

bazel_dep(name = "rules_python", version = "1.2.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.13",
)
use_repo(python, "python_3_13")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    python_version = "3.13",
    requirements_lock = "//:requirements.txt",
)

use_repo(pip, "pypi")

bazel_dep(name = "bazel_skylib", version = "1.7.1")

SUPPORTED_LLVM_VERSIONS = [
    "12",
    "13",
    "14",
    "15",
    "16",
    "17",
    "18",
]

available_llvm_versions = use_extension("//:mull_available_llvm_versions.bzl", "available_llvm_versions")
available_llvm_versions.detect_available(versions = SUPPORTED_LLVM_VERSIONS)
use_repo(available_llvm_versions, "available_llvm_versions")

mull_deps = use_extension(":mull_deps.bzl", "mull_deps")
mull_deps.configure(versions = SUPPORTED_LLVM_VERSIONS)

[use_repo(mull_deps, "mull_irm_%s" % v) for v in SUPPORTED_LLVM_VERSIONS]
[use_repo(mull_deps, "llvm_%s" % v) for v in SUPPORTED_LLVM_VERSIONS]

mull_package_info = use_extension("//:mull_package_info.bzl", "mull_package_info")
use_repo(mull_package_info, "mull_package_info")
